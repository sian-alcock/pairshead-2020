@import "../../../style.scss";

.feedback-modal {
  width: 100%;
  max-width: unset;
  max-height: unset;
  border: unset;
  border-radius: 0.9rem;

  .trap {
    width: 100%;
    height: 100%;
  }

  &__outer-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  &__container {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;

    // Padding top and bottom should match the height of the Close wrapper
    padding-top: 80px;
    padding-bottom: 80px;
  }

  &__content {
    z-index: 10;
    width: 100%;
    min-height: 30vh;

    @media screen and (min-width: $lg) {
      @include container;
    }
  }

  &__close-wrapper {
    position: absolute;
    z-index: 20;
    top: 0;
    width: 100%;
    height: 80px;
  }

  &__close {
    position: relative;
    top: 0;

    @include container;

    .icon-button {
      position: absolute;
      top: 0;
      right: rem(24px);
      width: rem(48px);
      height: rem(48px);

      @media screen and (min-width: $md) {
        top: rem(12px);
        right: 0;
      }
    }

    svg {
      width: rem(18px);
      height: rem(18px);
    }

    &__auto-close-indicator {
      position: absolute;
      bottom: 1rem;
      left: 50%;
      transform: translateX(-50%);
      background: rgba(0, 0, 0, 0.8);
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      backdrop-filter: blur(4px);
      z-index: 10;

      // Animation for the indicator
      animation: autoCloseIndicatorFade 0.3s ease-in-out;

      small {
        font-size: 0.75rem;
        font-weight: 500;
      }
    }

    // Auto-closing state modifications
    &--auto-closing {
      .feedback-modal__close {
        button {
          opacity: 0.5;
          cursor: not-allowed;
        }
      }

      .feedback-modal__container {
        // Subtle visual cue that modal is about to close
        border: 2px solid #10b981;
      }
    }
  }

  @media screen and (min-width: $lg) {
    width: 50%;
  }
}

@keyframes autoCloseIndicatorFade {
  from {
    opacity: 0;
    transform: translateX(-50%) translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}
